"use strict";function generateHeaders(e,t){for(var n=[],r=0;r<t;r++){n.push([]);for(var a=1;a<=e;a++)n[r].push({key:"column_"+a,text:a+". column",dataType:"text"})}return n}function generateData(e,t,n){var r,a,u,o=[],l=e.length-1;for(r=1;r<=n;r++){for(u={column_1:r},a=1;a<=e[l].length;a++)u[e[l][a-1].key]=r*(a+1)+". cell";for(a=1;a<=t[l].length;a++)u[t[l][a-1].key]=r*(a+1)+". cell";o.push(u)}return o}function generateDataGrid(){(virtualDG=new window.VirtualDataGrid).generateTable(getOptionsFromInputs())}function setupOptionContainer(){var e=window.innerHeight-document.querySelector(".main-container").getBoundingClientRect().top-20;document.querySelector(".generator-container").style.maxHeight=e+"px"}function setupOptions(){void 0===virtualDG&&(virtualDG=new window.VirtualDataGrid);var e=document.querySelectorAll("[name]");null!==e&&e.forEach(function(e){var t=e.getAttribute("type");"radio"!==t&&"checkbox"!==t&&(e.value=null)}),Object.keys(virtualDG.DEFAULT_OPTIONS).forEach(function(e){fillInputsWithOptions(e,virtualDG.DEFAULT_OPTIONS[e])})}function fillInputsWithOptions(e,t){null!==t&&"object"==typeof t&&Object.keys(t).forEach(function(n){fillInputsWithOptions(e+"-"+n,t[n])});var n=document.querySelector("[name="+e+"]");if(null!==n&&"function"!=typeof t&&null!==t){var r=n.getAttribute("type");"radio"===r||"checkbox"===r?document.querySelectorAll("[name="+e+"]").forEach(function(e){e.checked=e.value===t+""}):n.value="object"==typeof t?JSON.stringify(t,null,2):t}}function getOptionsFromInputs(){var e={},t={};return document.querySelectorAll("[name]").forEach(function(t){var n=t.getAttribute("type"),r=t.classList.contains("function"),a=t.classList.contains("json");if("radio"!==n&&"checkbox"!==n||t.matches(":checked")){var u=t.value;""!==u&&("true"===u?u=!0:"false"===u&&(u=!1),r&&(u=evalFunctionValues(t)),a&&(u=JSON.parse(t.value)),"number"===n&&(u=parseInt(t.value,10)),e[t.getAttribute("name")]=u)}}),Object.keys(e).forEach(function(n){for(var r=n.split("-"),a=null,u=0;u<r.length;u++){var o=r[u];null===a?r.length-1===u?t[o]=e[n]:(void 0===t[o]&&(t[o]={}),a=t[o]):r.length-1===u?a[o]=e[n]:(void 0===a[o]&&(a[o]={}),a=a[o])}}),t}function evalFunctionValues(e){var t=e.getAttribute("data-attributes").split(",");return Function(t,e.value)}function resizeEventHandler(){isEventDelayed||(isEventDelayed=!0,window.setTimeout(function(){isEventDelayed=!1,setupOptionContainer()},200))}function initPage(){setupOptionContainer(),setupOptions(),getOptionsFromInputs()}var virtualDG,isEventDelayed=!1;window.addEventListener("load",function(){var e=document.querySelector("#generate-table"),t=document.querySelector("#test-options"),n=document.querySelector("#reset-to-default"),r=document.querySelector("#generate-data");initPage(),window.addEventListener("resize",resizeEventHandler),null!==e&&e.addEventListener("click",function(){var e=document.querySelector(".data-container");null!==e&&(e.innerHTML=""),generateDataGrid()}),null!==t&&t.addEventListener("click",function(){window.console.log(getOptionsFromInputs())}),null!==n&&n.addEventListener("click",setupOptions),null!==r&&r.addEventListener("click",function(){var e=document.querySelector("[name=headers]"),t=document.querySelector("[name=fixedHeaders]"),n=document.querySelector("[name=dataSource]"),r=document.querySelector("#data-generator-header-size"),a=document.querySelector("#data-generator-fixed-header-size"),u=document.querySelector("#data-generator-headers-row-size"),o=document.querySelector("#data-generator-data-size");if(null!==e&&null!==t&&null!==n&&null!==r&&null!==a&&null!==u&&null!==o){var l=parseInt(r.value,10),i=parseInt(a.value,10),c=parseInt(u.value,10),s=parseInt(o.value,10),d=generateHeaders(l,c),v=generateHeaders(i,c),f=generateData(d,v,s);e.value=JSON.stringify(d,null,2),t.value=JSON.stringify(v,null,2),n.value=JSON.stringify(f,null,2)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
